name: Version Bump

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(jq -r '.version' module.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          CURRENT="${{ steps.current_version.outputs.version }}"
          IFS='.' read -r major minor patch <<< "$CURRENT"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="$major.$minor.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumping version from $CURRENT to $NEW_VERSION"

      - name: Update module.json version
        run: |
          jq --arg version "${{ steps.bump_version.outputs.new_version }}" '.version = $version' module.json > tmp.json && mv tmp.json module.json

      - name: Update README version
        run: |
          sed -i "s/### Version [0-9]\+\.[0-9]\+\.[0-9]\+/### Version ${{ steps.bump_version.outputs.new_version }}/" README.md

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add module.json README.md
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }}" || exit 0

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Create latest release
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          
          # Create release with latest tag
          gh release create "v$NEW_VERSION" \
            --title "v$NEW_VERSION" \
            --notes "Auto-generated release for version $NEW_VERSION" \
            --latest \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dev-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref != 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add commit hash to version
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          CURRENT_VERSION=$(jq -r '.version' module.json)
          DEV_VERSION="${CURRENT_VERSION}-dev.${COMMIT_HASH}"
          echo "Development version: $DEV_VERSION"
          jq --arg version "$DEV_VERSION" '.version = $version' module.json > tmp.json && mv tmp.json module.json

      - name: Upload development artifact
        uses: actions/upload-artifact@v3
        with:
          name: strongholds-and-followers-dev
          path: |
            .
            !.git
            !.github